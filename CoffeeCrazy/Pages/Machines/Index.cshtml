@page
@using CoffeeCrazy.Models
@using System.Security.Claims
@using CoffeeCrazy.Models.Enums
@model CoffeeCrazy.Pages.Machines.IndexModel
@{
    ViewData["Title"] = "Maskine Oversigt";
}

<h1>Maskine Oversigt</h1>

<div class="mb-3 d-flex justify-content-between align-items-center">
    @if (HttpContext.Session.GetInt32("RoleId") == (int)Role.Admin)
    {
        <a class="btn btn-primary btn-sm" asp-page="Create">Opret Maskine</a>
    }
    <p class="text-danger">Hvis maskinen er inaktiv, vil kortet være rød.</p>
    <p class="text-success">Hvis maskinen er aktiv og uden jobs, vil kortet være grøn.</p>
</div>

<div class="container">
    <div class="row">
        @foreach (var machine in Model.Machines)
        {
            <div class="col-md-6 mb-4">
                <div class="card @GetCardClass(machine, Model.Jobs)">
                    <div class="card-body">
                        <h5 class="card-title">Maskine ID: @machine.MachineId</h5>
                        <p class="card-text">
                            Placering: @machine.Placement <br />
                            Status: @(machine.Status ? "Aktiv" : "Inaktiv") <br />
                            Campus: @machine.Campus
                        </p>
                        <p class="card-text">Beskrivelse: @machine.Placement</p>

                        <a href="@Url.Page("Details", new { id = machine.MachineId })" class="text-decoration-none">
                            View Details
                        </a>

                        @if (HttpContext.Session.GetInt32("RoleId") == (int)Role.Admin)
                        {
                            <div class="dropdown mt-2">
                                <button class="btn btn-secondary dropdown-toggle btn-sm" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    Actions
                                </button>
                                <ul class="dropdown-menu">
                                    <li><a class="dropdown-item" asp-page="Edit" asp-route-id="@machine.MachineId">Edit</a></li>
                                    <li><a class="dropdown-item" asp-page="Delete" asp-route-id="@machine.MachineId">Delete</a></li>
                                    <li><a class="dropdown-item" asp-page="Details" asp-route-id="@machine.MachineId">View Details</a></li>
                                </ul>
                            </div>
                        }
                    </div>
                </div>
            </div>

        }
    </div>
</div>

@functions {

    private string GetCardClass(Machine machine, List<Job> jobs)
    {
        // Filter jobs by MachineId
        var jobsForMachine = jobs.Where(job => job.MachineId == machine.MachineId).ToList();

        // Check if all jobs for this machine are completed
        bool allJobsCompleted = jobsForMachine.All(job => job.IsCompleted);

        // If no jobs and the machine is active, set green border
        if (machine.Status && allJobsCompleted) return "border-success text-success";
        // If the machine is inactive, set red border
        if (!machine.Status) return "border-danger text-danger";
        // Default border style
        return "border-secondary";
    }
} 