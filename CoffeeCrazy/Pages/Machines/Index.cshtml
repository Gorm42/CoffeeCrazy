@page
@using CoffeeCrazy.Models
@using System.Security.Claims
@using CoffeeCrazy.Models.Enums
@model CoffeeCrazy.Pages.Machines.IndexModel
@{
    ViewData["Title"] = "Maskine Oversigt";
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <h1>Maskine Oversigt</h1>
    @if (HttpContext.Session.GetInt32("RoleId") == (int)Role.Admin)
    {
        <a class="btn btn-primary btn-sm" asp-page="Create">Opret Maskine</a>
    }
</div>

<div class="container">
    <div class="row g-4">

        @foreach (var machine in Model.Machines)
        {
            <div class="col-6 col-md-4 col-lg-3">
                <div class="card square-card @GetCardClass(machine, Model.Jobs)"
                     style="@(machine.MachineImage != null ?
                        "background-image: url('data:image/jpeg;base64," + Convert.ToBase64String(machine.MachineImage) + "'); background-size: cover; background-position: center;" :
                        "background-color: #f0f0f0;")">
                    <div class="card-body d-flex flex-column justify-content-between">
                        
                    
                        <a href="@Url.Page("Details", new { id = machine.MachineId })" class="text-decoration-none">
                           
                        </a>


                        <div class="d-flex justify-content-between mt-auto">
                            <div class="dropdown">
                                <button class="btn btn-secondary dropdown-toggle btn-sm" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    Placement
                                </button>
                                <ul class="dropdown-menu">
                                    <li><a class="dropdown-item" href="#">@machine.Placement</a></li>
                                </ul>
                            </div>

                            <!-- Admin Actions dropdown -->
                            @if (HttpContext.Session.GetInt32("RoleId") == (int)Role.Admin)
                            {
                                <div class="dropdown">
                                    <button class="btn btn-secondary dropdown-toggle btn-sm" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                        Actions
                                    </button>
                                    <ul class="dropdown-menu">
                                        <li><a class="dropdown-item" asp-page="Edit" asp-route-id="@machine.MachineId">Edit</a></li>
                                        <li><a class="dropdown-item" asp-page="Delete" asp-route-id="@machine.MachineId">Delete</a></li>
                                        <li><a class="dropdown-item" asp-page="Details" asp-route-id="@machine.MachineId">View Details</a></li>
                                    </ul>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<style>
   
    .square-card {
        width: 100%;
        padding-top: 100%;
        position: relative;
        color: white; /* Ensure text is readable on dark backgrounds */
    }

        .square-card .card-body {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            background-color: rgba(0, 0, 0, 0.5); /* Optional: Add a translucent overlay for better readability */
        }
</style>


@functions {
    private string GetCardClass(Machine machine, List<Job> jobs)
    {
        var jobsForMachine = jobs.Where(job => job.MachineId == machine.MachineId).ToList();
        bool allJobsCompleted = jobsForMachine.All(job => job.IsCompleted);

        if (machine.Status && allJobsCompleted) return "border-success text-success";
        if (!machine.Status) return "border-danger text-danger";
        return "border-secondary";
    }
}
